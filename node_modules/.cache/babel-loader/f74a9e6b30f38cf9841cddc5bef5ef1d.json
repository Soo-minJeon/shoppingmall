{"ast":null,"code":"import { API_BASE_URL } from \"../app-config.js\";\nexport function call(api, method, request) {\n  let options = {\n    headers: new Headers({\n      \"Content-Type\": \"application/json\"\n    }),\n    url: API_BASE_URL + api,\n    method: method\n  };\n\n  if (request) {\n    // GET method\n    options.body = JSON.stringify(request);\n  }\n\n  return fetch(options.url, options).then(response => // fetch 호출했기에 promise타입이 호출됨.\n  response.json().then(json => {\n    if (!response.ok) {\n      // response.ok 가 true이면 정상적인 응답을 받은 것이고\n      // response.ok 가 false이면 에러 응답을 받은 것임\n      return Promise.reject(json);\n    }\n\n    return json;\n  }).catch(err));\n}","map":{"version":3,"sources":["/Users/jeonsumin/Desktop/2022-1/웹프/Shoppingmall_termproject_react/shoppingmall-react-app/src/service/ApiService.js"],"names":["API_BASE_URL","call","api","method","request","options","headers","Headers","url","body","JSON","stringify","fetch","then","response","json","ok","Promise","reject","catch","err"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAEA,OAAO,SAASC,IAAT,CAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AACvC,MAAIC,OAAO,GAAG;AACVC,IAAAA,OAAO,EAAG,IAAIC,OAAJ,CAAY;AAClB,sBAAiB;AADC,KAAZ,CADA;AAIVC,IAAAA,GAAG,EAAGR,YAAY,GAAGE,GAJX;AAKVC,IAAAA,MAAM,EAAGA;AALC,GAAd;;AAQA,MAAIC,OAAJ,EAAa;AACT;AACAC,IAAAA,OAAO,CAACI,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAAf;AACH;;AAED,SAAOQ,KAAK,CAACP,OAAO,CAACG,GAAT,EAAcH,OAAd,CAAL,CAA4BQ,IAA5B,CAAkCC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBE,IAAD,IAAU;AAC3B,QAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb;AACA;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,WAAOA,IAAP;AACH,GAPD,EAOGI,KAPH,CAOSC,GAPT,CADG,CAAP;AAUH","sourcesContent":["import { API_BASE_URL } from \"../app-config.js\";\n\nexport function call(api, method, request) {\n    let options = {\n        headers : new Headers({\n            \"Content-Type\" : \"application/json\",\n        }),\n        url : API_BASE_URL + api,\n        method : method,\n    };\n\n    if (request) {\n        // GET method\n        options.body = JSON.stringify(request);\n    }\n\n    return fetch(options.url, options).then((response) => // fetch 호출했기에 promise타입이 호출됨.\n        response.json().then((json) => {\n            if(!response.ok) {\n                // response.ok 가 true이면 정상적인 응답을 받은 것이고\n                // response.ok 가 false이면 에러 응답을 받은 것임\n                return Promise.reject(json);\n            }\n            return json;\n        }).catch(err)\n    );\n}"]},"metadata":{},"sourceType":"module"}