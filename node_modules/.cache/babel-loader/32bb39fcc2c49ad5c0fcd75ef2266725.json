{"ast":null,"code":"import { API_BASE_URL } from \"../app-config.js\";\nconst ACCESS_TOKEN = 'ACCESS_TOKEN';\nexport function call(api, method, request) {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\"\n  }); // 로컬 스토리지에서 ACCESS_TOKEN 가져오기\n\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n  if (accessToken && accessToken != null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n\n  let options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method\n  };\n\n  if (request) {\n    // GET method\n    options.body = JSON.stringify(request);\n  }\n\n  return fetch(options.url, options).then(response => // fetch 호출했기에 promise타입이 호출됨.\n  response.json().then(json => {\n    if (!response.ok) {\n      // response.ok 가 true이면 정상적인 응답을 받은 것이고\n      // response.ok 가 false이면 에러 응답을 받은 것임\n      return Promise.reject(json);\n    }\n\n    return json;\n  }).catch(err => {\n    console.log(err.response);\n  }));\n}","map":{"version":3,"sources":["/Users/jeonsumin/Desktop/2022-1/웹프/Shoppingmall_termproject_react/shoppingmall-react-app/src/service/ApiService.js"],"names":["API_BASE_URL","ACCESS_TOKEN","call","api","method","request","headers","Headers","accessToken","localStorage","getItem","append","options","url","body","JSON","stringify","fetch","then","response","json","ok","Promise","reject","catch","err","console","log"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,OAAO,SAASC,IAAT,CAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AAEvC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACtB,oBAAiB;AADK,GAAZ,CAAd,CAFuC,CAMvC;;AACA,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBT,YAArB,CAApB;;AACA,MAAIO,WAAW,IAAIA,WAAW,IAAI,IAAlC,EAAuC;AACnCF,IAAAA,OAAO,CAACK,MAAR,CAAe,eAAf,EAAgC,YAAYH,WAA5C;AACH;;AAED,MAAII,OAAO,GAAG;AACVN,IAAAA,OAAO,EAAGA,OADA;AAEVO,IAAAA,GAAG,EAAGb,YAAY,GAAGG,GAFX;AAGVC,IAAAA,MAAM,EAAGA;AAHC,GAAd;;AAMA,MAAIC,OAAJ,EAAa;AACT;AACAO,IAAAA,OAAO,CAACE,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeX,OAAf,CAAf;AACH;;AAED,SAAOY,KAAK,CAACL,OAAO,CAACC,GAAT,EAAcD,OAAd,CAAL,CACNM,IADM,CACAC,QAAD,IAAc;AAChBA,EAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBE,IAAD,IAAU;AAC3B,QAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb;AACA;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,WAAOA,IAAP;AACH,GAPD,EAOGI,KAPH,CAOUC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACN,QAAhB;AACH,GATD,CAFG,CAAP;AAYH","sourcesContent":["import { API_BASE_URL } from \"../app-config.js\";\nconst ACCESS_TOKEN = 'ACCESS_TOKEN';\n\nexport function call(api, method, request) {\n\n    let headers = new Headers({\n        \"Content-Type\" : \"application/json\"\n    });\n\n    // 로컬 스토리지에서 ACCESS_TOKEN 가져오기\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n    if (accessToken && accessToken != null){\n        headers.append(\"Authorization\", \"Bearer \" + accessToken)\n    }\n\n    let options = {\n        headers : headers,\n        url : API_BASE_URL + api,\n        method : method,\n    };\n\n    if (request) {\n        // GET method\n        options.body = JSON.stringify(request);\n    }\n\n    return fetch(options.url, options)\n    .then((response) => // fetch 호출했기에 promise타입이 호출됨.\n        response.json().then((json) => {\n            if(!response.ok) {\n                // response.ok 가 true이면 정상적인 응답을 받은 것이고\n                // response.ok 가 false이면 에러 응답을 받은 것임\n                return Promise.reject(json);\n            }\n            return json;\n        }).catch((err) => {\n            console.log(err.response)\n        }));\n}"]},"metadata":{},"sourceType":"module"}